# Written 15/07/2024 by Christina Mazilu
# Project Euler Question 2: https://projecteuler.net/problem=2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
# find the sum of the even-valued terms.

first <- 0
second <- 1
total <- 0
fibi <- rep(0, 1000)
fibi[1] <- 1

fib <- function() {
  first <- 0
  second <- 1
  total <- 0
  
  while (first < 4000000) {
    # Update Fibonacci sequence
    temp <- first
    first <- second
    second <- temp + second
    # Check if the updated first number is even
    
    if (first %% 2 == 0) {
      total <- total + first
    }
  }
  cat("Sum of even-valued Fibonacci terms below 4 million:", total, "\n")
}

  
  


fib_reccur <- function(n) {
  # <<- initializes a global variable 
  fibi <<-  0*1000
  if (n==0 || n==1){
    return(n) 
  }
  nt = fib_reccur(n-1)+fib_reccur(n-2)
  fibi[n] = nt
  return(nt)
  }

fib()

fib_reccur(35)

for (f in fibi) {
  if (f <40000 & f %% 2 == 0) {
    total <- total + f
  }
}

print(total)


##### using piping 
install.packages("magrittr")
install.packages("purrr")
library("magrittr")
library("purrr")

# Function to calculate Fibonacci sequence up to a limit
calculate_fibonacci <- function(limit) {
  fibi <- numeric(1000)
  fibi[1] <- 1
  fibi <- fibi %>%
    purrr::accumulate(~ .x + .y, .init = 0) %>%
    purrr::keep(~ .x <= limit)
  return(fibi)
}

# Calculate sum of even Fibonacci terms not exceeding 4 million
fibonacci_sum <- function(limit) {
  calculate_fibonacci(limit) %>%
    keep(~ .x %% 2 == 0) %>%
    sum()
}

# Calculate and print the sum of even Fibonacci terms below 4 million
limit <- 4000000
result <- fibonacci_sum(limit)
cat("Sum of even-valued Fibonacci terms below 4 million:", result, "\n")

