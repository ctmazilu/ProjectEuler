source("~/RData/ProjectEularR/PE_2.R")
debugSource("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
# Function to calculate Fibonacci sequence up to a limit
calculate_fibonacci <- function(limit) {
fibi <- numeric(1000)
fibi[1] <- 1
fibi <- fibi %>%
purrr::accumulate(~ .x + .y, .init = 0) %>%
purrr::keep(~ .x <= limit)
return(fibi)
}
# Calculate sum of even Fibonacci terms not exceeding 4 million
fibonacci_sum <- function(limit) {
calculate_fibonacci(limit) %>%
keep(~ .x %% 2 == 0) %>%
sum()
}
# Calculate and print the sum of even Fibonacci terms below 4 million
limit <- 4000000
result <- fibonacci_sum(limit)
cat("Sum of even-valued Fibonacci terms below 4 million:", result, "\n")
result <- fibonacci_sum(limit)
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
source("~/RData/ProjectEularR/PE_2.R")
##### using piping
install.packages("magrittr")
install.packages("magrittr")
library("magrittr")
library("magrittr")
# Function to calculate Fibonacci sequence up to a limit
calculate_fibonacci <- function(limit) {
fibi <- numeric(1000)
fibi[1] <- 1
fibi <- fibi %>%
purrr::accumulate(~ .x + .y, .init = 0) %>%
purrr::keep(~ .x <= limit)
return(fibi)
}
# Calculate sum of even Fibonacci terms not exceeding 4 million
fibonacci_sum <- function(limit) {
calculate_fibonacci(limit) %>%
keep(~ .x %% 2 == 0) %>%
sum()
}
# Calculate and print the sum of even Fibonacci terms below 4 million
limit <- 4000000
result <- fibonacci_sum(limit)
cat("Sum of even-valued Fibonacci terms below 4 million:", result, "\n")
install.packages("purrr")
install.packages("purrr")
library("purrr")
# Function to calculate Fibonacci sequence up to a limit
calculate_fibonacci <- function(limit) {
fibi <- numeric(1000)
fibi[1] <- 1
fibi <- fibi %>%
purrr::accumulate(~ .x + .y, .init = 0) %>%
purrr::keep(~ .x <= limit)
return(fibi)
}
# Calculate sum of even Fibonacci terms not exceeding 4 million
fibonacci_sum <- function(limit) {
calculate_fibonacci(limit) %>%
keep(~ .x %% 2 == 0) %>%
sum()
}
# Calculate and print the sum of even Fibonacci terms below 4 million
limit <- 4000000
result <- fibonacci_sum(limit)
cat("Sum of even-valued Fibonacci terms below 4 million:", result, "\n")
source("~/RData/ProjectEularR/PE_2.R")
